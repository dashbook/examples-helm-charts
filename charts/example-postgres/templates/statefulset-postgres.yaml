apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "chart.fullname" . }}-postgres
  labels:
  {{- include "chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.postgres.replicas }}
  selector:
    matchLabels:
      app: postgres
  serviceName: {{ include "chart.fullname" . }}-postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - env:
        - name: POSTGRES_USER
          value: {{ quote .Values.postgres.postgres.env.postgresUser }}
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: postgres-secret
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.postgres.postgres.image.repository }}:{{ .Values.postgres.postgres.image.tag
          | default .Chart.AppVersion }}
        name: postgres
        ports:
        - containerPort: 5432
        resources: {}
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-data
        - mountPath: /docker-entrypoint-initdb.d/
          name: postgres-init
      volumes:
      - configMap:
          name: {{ include "chart.fullname" . }}-postgres-init
        name: postgres-init
  updateStrategy: {}
  volumeClaimTemplates:
  - metadata:
      creationTimestamp: null
      name: postgres-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources: {{ .Values.postgres.volumeClaims.postgresData | toYaml | nindent 8
        }}
